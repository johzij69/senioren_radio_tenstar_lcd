; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


; Er zijn twee video's beschikbaar die laten zien hoe je de interne JTAg kan gebruiken voor debugging.
; https://www.youtube.com/watch?v=3JZ_D3ELwOQ
;https://www.youtube.com/watch?v=HGB9PI3IDL0
; https://www.youtube.com/watch?v=A59frxEvs7M
; vcp drivers: https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers
; zadig: https://zadig.akeo.ie/#
; esp-32-S# devkitc: https://www.espressif.com/en/products/devkits/esp32-s3-devkitc/overview




;[env:esp32-s3-devkitc-1-n16r8v]
; see https://github.com/sivar2311/ESP32-S3-PlatformIO-Flash-and-PSRAM-configurations?tab=readme-ov-file#esp32-s3-wroom-11u-n16r8
; https://github.com/vcc-gnd/YD-ESP32-S3

; nog bekijken maar met bovenstaande url heb ik tot nu toe de beste resultate gehaald.
; https://github.com/handledexception/platform-espressif32/blob/esp32-s3-devkitc-1-n16r8v/boards/esp32-s3-devkitc-1-n16r8v.json

; voor jtag debugging volgende nognazien
; https://github.com/yellobyte/ESP32-DevBoards-Getting-Started/tree/main/debugging_without_JTAG



[env:esp32-s3-devkitc-1-n16r8v]
;platform = https://github.com/platformio/platform-espressif32.git   ;Fech lastest support for ESP32

platform = espressif32
board = esp32-s3-devkitc-1-n16r8v
framework = arduino
board_build.arduino.memory_type = qio_opi
board_build.flash_mode = qio
board_build.prsam_type = opi
board_upload.flash_size = 16MB
board_upload.maximum_size = 16777216
board_build.extra_flags = 
  -DBOARD_HAS_PSRAM

board_build.filesystem = littlefs
board_build.partitions = default_16MB.csv

; build_type = debug   

build_flags = 
    -D ARDUINO_USB_MODE=0
	-D ARDUINO_USB_CDC_ON_BOOT=1
	-D CORE_DEBUG_LEVEL=1
  	-D BOARD_HAS_PSRAM=1
	-D AUDIOTASK_CORE=0  ; 0 or 1 - reads from the InBuffer, decodes and feeds I2S
	-D USER_SETUP_LOADED  ;tell tft_eSPI to use buildflags settings
	-D ILI9488_DRIVER
	-D USE_HSPI_PORT
	-D TFT_MISO=13
	-D TFT_MOSI=11
	-D TFT_SCLK=12
	-D TFT_CS=10
	-D TFT_DC=9
	-D TFT_RST=8
	-D TOUCH_CS=-1
	-D LOAD_GLCD=1
	-D LOAD_FONT2
	-D LOAD_FONT4
	-D LOAD_FONT6
	-D LOAD_FONT7
	-D LOAD_FONT8
	-D LOAD_GFXFF
	-D SMOOTH_FONT
;	-D SPI_FREQUENCY=40000000
	-D SPI_FREQUENCY=27000000



lib_deps =
		https://github.com/tzapu/WiFiManager.git
		me-no-dev/ESP Async WebServer
	 	me-no-dev/AsyncTCP@^1.1.1
	 	me-no-dev/ESPAsyncTCP@^1.2.2
		bblanchon/ArduinoJson@^7.0.4
		bodmer/TFT_eSPI@^2.5.43
		bodmer/TJpg_Decoder@^1.1.0
		bitbank2/PNGdec@^1.0.1
		bodmer/JPEGDecoder@^2.0.0


; lib_deps = 
; ; 	me-no-dev/ESP Async WebServer
; ; 	me-no-dev/AsyncTCP@^1.1.1
; ; 	me-no-dev/ESPAsyncTCP@^1.2.2
; ; 	michalmonday/CSV Parser@^1.2.2
; ; 	wnatth3/WiFiManager@^2.0.16-rc.2
; ; 	arduinogetstarted/ezButton@^1.0.4
; ; 	bodmer/TFT_eSPI@^2.5.43
; ; 	bodmer/TJpg_Decoder@^1.1.0
; ; 	bitbank2/PNGdec@^1.0.1
; ; 	bodmer/JPEGDecoder@^2.0.0
; ; 	bblanchon/ArduinoJson@^7.0.4






            

